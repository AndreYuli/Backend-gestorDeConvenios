generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique @db.VarChar(50)
  descripcion String?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  usuarios    Usuario[]

  @@map("roles")
}

model Facultad {
  id                  Int                @id @default(autoincrement())
  nombre              String             @unique @db.VarChar(100)
  descripcion         String?
  activa              Boolean?           @default(true)
  created_at          DateTime?          @default(now()) @db.Timestamp(6)
  updated_at          DateTime?          @default(now()) @db.Timestamp(6)
  convenio_facultades ConvenioFacultad[]

  @@map("facultades")
}

model Usuario {
  id                 Int        @id @default(autoincrement())
  email              String     @unique @db.VarChar(100)
  password           String     @db.VarChar(255)
  nombres            String?    @db.VarChar(100)
  apellidos          String?    @db.VarChar(100)
  telefono           String?    @db.VarChar(20)
  codigo_estudiante  String?    @unique @db.VarChar(20)
  rol_id             Int?       @default(1)
  activo             Boolean?   @default(true)
  ultimo_login       DateTime?  @db.Timestamp(6)
  token_recuperacion String?    @db.VarChar(255)
  token_expiracion   DateTime?  @db.Timestamp(6)
  created_at         DateTime?  @default(now()) @db.Timestamp(6)
  updated_at         DateTime?  @default(now()) @db.Timestamp(6)
  convenios          Convenio[]
  roles              Rol?       @relation(fields: [rol_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("usuarios")
}

model Convenio {
  id                  String             @id @db.VarChar(50)
  nombre              String             @db.VarChar(200)
  descripcion         String?
  empresa_institucion String?            @db.VarChar(150)
  fecha_inicio        DateTime           @db.Date
  fecha_fin           DateTime?          @db.Date
  estado              String?            @default("Activo") @db.VarChar(20)
  tipo_convenio       String?            @default("Institucional") @db.VarChar(50)
  beneficios          String?
  requisitos          String?
  contacto_nombre     String?            @db.VarChar(100)
  contacto_email      String?            @db.VarChar(100)
  contacto_telefono   String?            @db.VarChar(20)
  imagen_url          String?            @db.VarChar(500)
  documento_url       String?            @db.VarChar(500)
  usuario_creador_id  Int?
  created_at          DateTime?          @default(now()) @db.Timestamp(6)
  updated_at          DateTime?          @default(now()) @db.Timestamp(6)
  convenio_facultades ConvenioFacultad[]
  usuarios            Usuario?           @relation(fields: [usuario_creador_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("convenios")
}

model ConvenioFacultad {
  id          Int       @id @default(autoincrement())
  convenio_id String?   @db.VarChar(50)
  facultad_id Int?
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  convenios   Convenio? @relation(fields: [convenio_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  facultades  Facultad? @relation(fields: [facultad_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([convenio_id, facultad_id])
  @@map("convenio_facultades")
}


